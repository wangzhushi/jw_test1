[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\u725869\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\u725869\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.5 (Oracle Corporation Java 16.0.2)
[debug]       Load.loadUnit: plugins took 57.4169ms
[debug]       Load.loadUnit: defsScala took 0.1831ms
[debug] [Loading] Scanning directory C:\Users\u725869\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\u725869\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 10.7054 ms
[debug]           Load.resolveProject(global-plugins) took 25.3074ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\u725869\.sbt\1.0\plugins, plugins: List(<none>))) took 50.0998ms
[debug] [Loading] Done in C:\Users\u725869\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 63.3063ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.1767ms
[debug]     Load.loadUnit(file:/C:/Users/u725869/.sbt/1.0/plugins/, ...) took 126.9156ms
[debug]   Load.apply: load took 239.1705ms
[debug]   Load.apply: resolveProjects took 3.6112ms
[debug]   Load.apply: finalTransforms took 37.777ms
[debug]   Load.apply: config.delegates took 5.1698ms
[debug]   Load.apply: Def.make(settings)... took 222.9007ms
[debug]   Load.apply: structureIndex took 58.3832ms
[debug]   Load.apply: mkStreams took 0.8738ms
[info] loading global plugins from C:\Users\u725869\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 7698.2268ms
[debug]           Load.loadUnit: plugins took 16.8536ms
[debug]           Load.loadUnit: defsScala took 0.0023ms
[debug] [Loading] Scanning directory C:\Users\u725869\IdeaProjects\jw_test1\project
[debug]             Load.loadUnit: mkEval took 4.0165ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\u725869\IdeaProjects\jw_test1\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 0.8424 ms
[info] loading settings for project jw_test1-build from idea.sbt ...
[debug]               Load.resolveProject(jw_test1-build) took 2.1932ms
[debug]             Load.loadTransitive: finalizeProject(Project(id jw_test1-build, base: C:\Users\u725869\IdeaProjects\jw_test1\project, plugins: List(<none>))) took 3.3619ms
[debug] [Loading] Done in C:\Users\u725869\IdeaProjects\jw_test1\project, returning: (jw_test1-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1344.9668ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.6293ms
[debug]         Load.loadUnit(file:/C:/Users/u725869/IdeaProjects/jw_test1/project/, ...) took 1367.0453ms
[debug]       Load.apply: load took 1368.0802ms
[debug]       Load.apply: resolveProjects took 0.0858ms
[debug]       Load.apply: finalTransforms took 8.2858ms
[debug]       Load.apply: config.delegates took 0.295ms
[debug]       Load.apply: Def.make(settings)... took 44.0239ms
[debug]       Load.apply: structureIndex took 20.0925ms
[debug]       Load.apply: mkStreams took 0.0019ms
[info] loading project definition from C:\Users\u725869\IdeaProjects\jw_test1\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 1937.7001ms
[debug]     Load.loadUnit: defsScala took 0.0029ms
[debug] [Loading] Scanning directory C:\Users\u725869\IdeaProjects\jw_test1
[debug]       Load.loadUnit: mkEval took 0.2492ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\u725869\IdeaProjects\jw_test1, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.4157 ms
[info] loading settings for project jw_test1 from build.sbt ...
[debug]         Load.resolveProject(jw_test1) took 23.083ms
[debug]       Load.loadTransitive: finalizeProject(Project(id jw_test1, base: C:\Users\u725869\IdeaProjects\jw_test1, plugins: List(<none>))) took 25.3096ms
[debug] [Loading] Done in C:\Users\u725869\IdeaProjects\jw_test1, returning: (jw_test1)
[debug]     Load.loadUnit: loadedProjectsRaw took 911.8494ms
[debug]     Load.loadUnit: cleanEvalClasses took 32.461ms
[debug]   Load.loadUnit(file:/C:/Users/u725869/IdeaProjects/jw_test1/, ...) took 2882.6087ms
[debug] Load.apply: load took 2883.9894ms
[debug] Load.apply: resolveProjects took 0.0847ms
[debug] Load.apply: finalTransforms took 15.626ms
[debug] Load.apply: config.delegates took 0.2165ms
[debug] Load.apply: Def.make(settings)... took 43.274ms
[debug] Load.apply: structureIndex took 15.6591ms
[debug] Load.apply: mkStreams took 0.0017ms
[info] set current project to jw_test1 (in build file:/C:/Users/u725869/IdeaProjects/jw_test1/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 56345 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 56345, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to jw_test1 (in build file:/C:/Users/u725869/IdeaProjects/jw_test1/)
[debug] > Exec(idea-shell, None, None)
